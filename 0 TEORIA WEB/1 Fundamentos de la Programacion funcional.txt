La programación funcional es un estilo de programación donde las soluciones
son simples, funciones aisladas, sin ningún efecto secundario fuera del 
ámbito de la función: 

INPUT -> PROCESS -> OUTPUT

La programación funcional se refiere a:

Funciones aisladas: sin dependencia alguna del estado del programa, el cual 
incluye variables globales sujetas a cambios

Funciones puras: una misma entrada siempre da la misma salida

Funciones con efectos secundarios limitados: cualquier cambio o mutación en el 
estado del programa fuera de la función son cuidadosamente controlados

PRINCIPIOS:
1) No alteres una variable u objeto: crea nuevas variables y objetos y 
devuélvelos, si es necesario, desde una función. Pista: usar algo como const 
newArr = arrVar, donde arrVar es un arreglo, simplemente creará una referencia
a la variable existente y no una copia. Así que cambiar un valor en newArr 
cambiaría el valor en arrVar.
Para copiar todos los elementos de un array en un espacio nuevo de memoria, la
forma sencilla es con:
let arrayOriginal = ["Esto es una", "prueba", 5];
let arrayCopia = [...arrayOriginal];

2) Declara parámetros de función: cualquier cálculo dentro de una función 
depende sólo de los argumentos pasados a la función y no en ningún objeto o 
variable global.