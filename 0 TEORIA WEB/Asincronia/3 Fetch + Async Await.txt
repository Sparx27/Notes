Los .then son reemplazados por await:

const $fetchAsync = document.getElementById("fetch-async"),
  $fragment = document.createDocumentFragment();

Creo una funcion async que contiene la estructura try, await, throw, catch, finally:

async function getData() {
	try {let res = await fetch("URL")
		json = await res.json(); //Recordar que podria ser .text() o .blob()

	if(!res.ok) throw {status: res.status, statusText: res.statustext} 
			//throw es un return que manda el flujo al catch
	
	//Recordar el uso fragment para ahorrar recursos
	json.forEach(el => {
        let $element = document.createElement("element");
        $element.innerHTML = `${el,propiedad1}, ${el.propiedadX}`;
        $fragment.appendChild($element);
      });
      
      $fetchAsync.appendChild($fragment); 
	} 
	
	catch(err) {

		//El objeto creado en throw envia los valores para ser usados aca
      	let message = err.statusText||"Error detected";
        	  $fetchAsync.innerHTML = `${err.status}: ${message}`;
    	} 

	finally {
		
    	}
} //Cierre de async function

//Luego debo llamar a esa funcion para que se ejecute
getData();
